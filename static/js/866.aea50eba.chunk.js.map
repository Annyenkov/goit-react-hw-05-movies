{"version":3,"file":"static/js/866.aea50eba.chunk.js","mappings":"0NAGaA,EAASC,EAAAA,GAAAA,IAAH,+CAINC,EAAYD,EAAAA,GAAAA,GAAH,+FAOTE,EAAOF,EAAAA,GAAAA,GAAH,0DAKJG,GAAOH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,kJ,SCOjB,EAtBkB,SAAC,GAAgB,IAAdK,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACL,EAAD,UACGG,EAAOG,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YACxB,OACE,SAACV,EAAD,WACE,UAACE,EAAD,CAAMS,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMR,GAA1C,WACE,SAACP,EAAD,CAAQgB,IAAG,yCAAoCJ,GAAeK,IAAI,MAClE,0BAAQN,QAHID,EAOnB,KAGN,C,+HCjBYQ,GAAQjB,EAAAA,EAAAA,IAAOkB,EAAAA,GAAPlB,CAAH,0GAOLmB,EAASnB,EAAAA,GAAAA,OAAH,uRAgBNoB,EAASpB,EAAAA,GAAAA,IAAH,8C,SCDnB,EArBkB,SAAC,GAAgB,IAAfqB,EAAc,EAAdA,SAClB,OACE,SAACD,EAAD,WACE,SAAC,KAAD,CACAE,cAAe,CAACC,MAAO,IACrBF,SAAUA,EAFZ,UAIA,UAAC,KAAD,YACE,kBAAOG,QAAQ,WACf,SAACP,EAAD,CAAOR,GAAG,QAAQgB,KAAK,WACvB,SAACN,EAAD,CAAQO,KAAK,SAAb,0BAKP,E,wCCwBD,EAnCe,WAAO,IAAD,EACnB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOtB,EAAP,KAAeuB,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAoB3C,OAPAC,EAAAA,EAAAA,YAAU,WACHF,IAGLG,EAAAA,EAAAA,IAAkBH,GAAOI,MAAK,SAAAC,GAAO,OAAKT,EAAUS,EAAf,GACtC,GAAE,CAACL,KAGF,iCACE,SAAC,EAAD,CAAWX,SApBU,SAAAiB,GACvB,IAAMC,EAAcD,EAAEf,MAEK,KAAvBgB,EAAYC,QAIhBT,EAAgB,CAAEC,MAAOO,IACzBX,EAAU,KAJRa,MAAM,sBAKT,KAYG,SAAC,EAAAC,SAAD,CAAUC,UAAW,SAACC,EAAA,EAAD,CACnBC,MAAM,OACNC,KAAM,KAFR,SAIIzC,IAAU,SAAC0C,EAAA,EAAD,CAAW1C,OAASA,QAIvC,C,mMCxCD2C,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBF,EAAAA,EAAAA,IAAA,sCAAyCC,IAD3D,cACCE,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgC5C,GAAhC,uFACkBuC,EAAAA,EAAAA,IAAA,iBAAoBvC,EAApB,oBAAkCwC,EAAlC,oBADlB,cACCE,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAAyB7C,GAAzB,uFACkBuC,EAAAA,EAAAA,IAAA,iBAAoBvC,EAApB,4BAA0CwC,EAA1C,oBADlB,cACCE,EADD,yBAEEA,EAASC,KAAKG,MAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4B/C,GAA5B,uFACkBuC,EAAAA,EAAAA,IAAA,iBAAoBvC,EAApB,4BAA0CwC,EAA1C,2BADlB,cACCE,EADD,yBAEEA,EAASC,KAAKf,SAFhB,kEAKA,SAAeF,EAAtB,+CAAO,OAAP,oBAAO,WAAiCV,GAAjC,uFACkBuB,EAAAA,EAAAA,IAAA,gCAAmCC,EAAnC,iCAAmExB,EAAnE,gCADlB,cACC0B,EADD,yBAEEA,EAASC,KAAKf,SAFhB,kE","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","pages/Movies.jsx","services/movies-api.js"],"sourcesContent":["import { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const Poster = styled.img`\npadding-bottom: 10px;\n`\n\nexport const MovieCard = styled.li`\nwidth: 200px;\npadding: 10px;\ntext-align: center;\nlist-style: none;\n`\n\nexport const List = styled.ul`\ndisplay: flex;\nflex-wrap: wrap;\n`\n\nexport const Link = styled(NavLink)`\ndisplay: flex;\nheight: 350px;\ncolor: black;\nborder: 1px solid black;\ntext-decoration: none;\nflex-direction: column;\n`","import PropTypes from \"prop-types\"\nimport { useLocation } from \"react-router-dom\"\nimport { Link, List, MovieCard, Poster } from \"./MovieList.styled\"\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation()\n  return (\n    <List>\n      {movies.map(({ id, title, poster_path }) => {\n        return (\n          <MovieCard key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <Poster src={`https://image.tmdb.org/t/p/w400${poster_path}`} alt=''/>\n              <span>{ title }</span>\n            </Link>\n          </MovieCard>\n        )\n      })}\n    </List>\n  )\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.array.isRequired,\n}\n\nexport default MovieList","import { Field } from \"formik\";\nimport styled from \"styled-components\";\n\nexport const Input = styled(Field)`\npadding: 5px;\nmargin-right: 10px;\nborder: 1px solid grey;\nborder-radius: 5px;\n`\n\nexport const Button = styled.button`\nborder: none;\n  cursor: pointer;\n  text-decoration: none;\n  display: inline-block;\n  color: white;\n  padding: 8px;\n  letter-spacing: 2px;\n  background-color: grey;\n  border-radius: 10px;\n  &:hover,\n  &:focus {\n    background-color: blue;\n  }\n`\n\nexport const Search = styled.div`\nmargin-bottom: 50px;\n`","import { Formik, Form } from \"formik\"\nimport PropTypes from \"prop-types\"\nimport { Button, Input, Search } from \"./SearchBox.styled\"\n\nconst SearchBox = ({onSubmit}) => {\n  return (\n    <Search>\n      <Formik\n      initialValues={{movie: []}}\n        onSubmit={onSubmit} \n    >\n      <Form>\n        <label htmlFor=\"movie\"/>\n        <Input id='movie' name='movie' />\n        <Button type=\"submit\">Submit</Button>\n      </Form>\n    </Formik>\n    </Search>\n  )\n}\n\nSearchBox.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n}\n\nexport default SearchBox","import MovieList from \"components/MovieList\"\nimport SearchBox from \"components/SearchBox\"\nimport { useState, useEffect } from \"react\"\nimport { useSearchParams } from \"react-router-dom\"\nimport { searchMovieByName } from \"services/movies-api\"\nimport { Suspense } from \"react\"\nimport { PacmanLoader } from \"react-spinners\"\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([])\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  const handleFormSubmit = e => {\n    const querySearch = e.movie;\n\n    if (querySearch.trim() === '') {\n      alert('Enter your request!');\n      return;\n    }\n    setSearchParams({ query: querySearch });\n    setMovies([])\n  };\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    searchMovieByName(query).then(results  => setMovies(results));\n  }, [query]);\n\n  return (\n    <>\n      <SearchBox onSubmit={handleFormSubmit} />\n      <Suspense fallback={ <PacmanLoader\n        color=\"blue\"\n        size={25}\n      />}>\n        { movies && <MovieList movies={ movies } />}\n     </Suspense>\n    </>\n  )\n}\nexport default Movies","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'e1c61c6acd88be7684f0f324a2544526';\n\nexport async function fetchMoviesTrend() {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport async function movieDetailsById(id) {\n  const response = await axios.get(`/movie/${id}?api_key=${API_KEY}&language=en-US`);\n  return response.data\n}\n\nexport async function movieCast(id) {\n  const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n  return response.data.cast\n}\n\nexport async function movieReviews(id) {\n  const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n  return response.data.results\n}\n\nexport async function searchMovieByName(name) {\n  const response = await axios.get(`/search/movie?api_key=${API_KEY}&language=en-US&query=${name}&page=1&include_adult=false`);\n  return response.data.results\n}"],"names":["Poster","styled","MovieCard","List","Link","NavLink","movies","location","useLocation","map","id","title","poster_path","to","state","from","src","alt","Input","Field","Button","Search","onSubmit","initialValues","movie","htmlFor","name","type","useState","setMovies","useSearchParams","searchParams","setSearchParams","query","get","useEffect","searchMovieByName","then","results","e","querySearch","trim","alert","Suspense","fallback","PacmanLoader","color","size","MovieList","axios","API_KEY","fetchMoviesTrend","response","data","movieDetailsById","movieCast","cast","movieReviews"],"sourceRoot":""}